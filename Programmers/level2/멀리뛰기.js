/*
문제 설명
효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
(1칸, 1칸, 1칸, 1칸)
(1칸, 2칸, 1칸)
(1칸, 1칸, 2칸)
(2칸, 1칸, 1칸)
(2칸, 2칸)
의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 예를 들어 4가 입력된다면, 5를 return하면 됩니다.

제한 사항
n은 1 이상, 2000 이하인 정수입니다.
*/

function solution(n) {
  function fibonacci(n) { // 메모이제이션
    let newArr = [1n, 1n]; 
    // 원래는 0, 1인데 1일 때 1가지이므로 1부터 시작함

    let fib = (n) => {
      if (newArr[n] !== undefined) {
        return newArr[n]; //이미 있는 건 그대로 리턴
      }
      newArr[n] = fib(n - 1) + fib(n - 2); //없는 건 새로 만들어서 저장!!!*****
      return newArr[n];
    };
    return fib(n);
  }
  return fibonacci(n) % 1234567n; 
  // 뒤에 n을 붙이는 이유 -> BigInt 
  // number 최대치보다 큰 정수를 표현하기 위해
}

// 1 1
// 2 1
// 3 3
// 4 5


